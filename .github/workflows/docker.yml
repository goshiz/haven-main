name: docker
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        arch:
          - name: "Linux amd64"
            platform: "linux/amd64"
            target: "linux-x86_64"
          - name: "Linux arm64"
            platform: "linux/arm64"
            target: "linux-armv8"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_REPO }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
# Most volatile cache
      - name: ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ccache-docker-${{ matrix.arch.target }}-${{ github.sha }}
          restore-keys: ccache-docker-${{ matrix.arch.target }}-
      - name: Build Stage 1
        id: build-stage1
        uses: docker/build-push-action@v4
        with:
          file: .docker/Dockerfile
          context: .
          target: builder
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args:
            TARGET=${{ matrix.arch.target }}
          platforms: ${{ matrix.arch.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,name=${{ secrets.DOCKERHUB_REPO }},push-by-digest=false,name-canonical=true,push=true
          load: true
# Export cache from Docker
      - name: Export volatile cache
        run: |
          docker run -v ${GITHUB_WORKSPACE}/.ccache:/.ccache ${{ secrets.DOCKERHUB_REPO }}:latest cp -vr /haven-main/.ccache /
      - name: Build Stage 2
        id: build-stage2
        uses: docker/build-push-action@v4
        with:
          file: .docker/Dockerfile
          context: .
          target: runner
          #cache-from: type=gha
          #cache-to: type=gha,mode=max
          build-args:
            TARGET=${{ matrix.arch.target }}
          platforms: ${{ matrix.arch.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ secrets.DOCKERHUB_REPO }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build-stage2.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_REPO }}
          tags: |
            # onyltag latest on release
            type=match,pattern=v\d.\d.\d,value=latest
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ secrets.DOCKERHUB_REPO }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}